'''
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
from functools import lru_cache

@lru_cache
def fib(x):
    if x == 0:
        return 0
    if x == 1:
        return 1
    return fib(x-1) + fib(x-2)

if __name__ == "__main__":
    elements = []
    total_sum = 0
    term = 1
    while True:
        value = fib(term)
        if value > 4000000:
            break
        # Count even numbers
        if value % 2 == 0:
            total_sum += value
        term += 1
    print(total_sum)
    